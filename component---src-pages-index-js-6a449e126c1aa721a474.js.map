{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/poems.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["children","data","allPoemsDataJson","totalCount","className","styles","poemsContainer","edges","map","node","poem","key","id","head","to","fields","slug","title","foot","author","author_en","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"2FAAA,yBAEe,gBAAiB,IAAfA,EAAc,EAAdA,SACf,OACI,6BACE,oDACCA,EACD,wD,o0XCHO,aAEX,IAAMC,EAAI,OAoBV,OACE,6BACE,4BAAKA,EAAKC,iBAAiBC,WAA3B,UACE,yBAAKC,UAAWC,IAAOC,gBACpBL,EAAKC,iBAAiBK,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,yBAAKL,UAAWC,IAAOK,KAAMC,IAAKF,EAAKG,IACrC,yBAAKR,UAAWC,IAAOQ,MACrB,wBAAIT,UAAWC,IAAOO,IAAKH,EAAKG,IAChC,kBAAC,IAAD,CAAME,GAAIL,EAAKM,OAAOC,MACpB,4BAAQZ,UAAWC,IAAOY,OAA1B,IAAmCR,EAAKQ,SAI5C,kBAAC,IAAD,CAAMH,GAAIL,EAAKM,OAAOC,KAAMZ,UAAWC,IAAOa,MAC5C,4BAAQd,UAAWC,IAAOc,QAA1B,IAAoCV,EAAKW,mBCpC5C,qBACb,OACM,kBAAC,IAAD,KACE,kBAAC,EAAD,S,kCCPV,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-6a449e126c1aa721a474.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default ({children}) => {\r\n  return (\r\n      <div>\r\n        <h1>Ogura Hyakunin Isshu</h1>\r\n        {children}\r\n        <h5>Made by Akash Meshram</h5>\r\n      </div>\r\n  )\r\n}","import React from \"react\"\r\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\r\nimport styles from \"../styles/poem.module.css\"\r\n\r\nexport default () => {\r\n\r\n    const data = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                allPoemsDataJson {\r\n                    edges {\r\n                        node {\r\n                            fields {\r\n                                slug\r\n                            }\r\n                            id\r\n                            author_en\r\n                            title\r\n                        }\r\n                    }\r\n                    totalCount\r\n                }\r\n            }\r\n            `\r\n      )\r\n\r\n    return (    \r\n      <div>\r\n        <h4>{data.allPoemsDataJson.totalCount} Poems</h4>\r\n          <div className={styles.poemsContainer}>\r\n            {data.allPoemsDataJson.edges.map(({ node }) => (\r\n              <div className={styles.poem} key={node.id}>\r\n                <div className={styles.head}> \r\n                  <h1 className={styles.id}>{node.id}</h1>\r\n                  <Link to={node.fields.slug}>\r\n                    <button className={styles.title}> {node.title}</button>\r\n                  </Link>\r\n                  \r\n                </div>                \r\n                <Link to={node.fields.slug} className={styles.foot}>\r\n                  <button className={styles.author}> {node.author_en}</button>\r\n                </Link>                                             \r\n              </div>\r\n            ))}\r\n          </div>     \r\n      </div>\r\n                \r\n  )\r\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Poems from \"../components/poems\"\n\nexport default () => {\n  return (\n        <Layout>\n          <Poems/>        \n        </Layout>           \n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}